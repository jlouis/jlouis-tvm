%% A minimalistic ML with patterns
%%  Jesper Louis Andersen, 2009.


%%%%%{ PML Type system }%%%%%

%{

Type system

}%

tp : type.

tp/nat : tp.
tp/unit : tp.
tp/pair : tp -> tp -> tp.
tp/arrow : tp -> tp -> tp.



%%%%%{ PML Syntax }%%%%%

%{

This very simple language have the following syntax structure

}%

%{ The vars should die to a HOAS encoding when we figure out
   how to handle them }%
var : tp -> type.

pattern : tp -> type.

pattern/nil : pattern tp/unit.
pattern/pair : var T -> pattern T' -> pattern (tp/pair T T').

term : tp -> type.

term/nat : nat -> term tp/nat.
term/plus : term tp/nat -> term tp/nat -> term tp/nat.
term/if : term tp/nat -> term T -> term T -> term T.
term/let : term T -> (pattern T -> term T') -> term T'.
term/app : term (tp/arrow T T') -> term T -> term T'.
term/lam : (term T -> term T') -> term (tp/arrow T T').
term/letrec : term T -> (pattern T -> term T') -> term T'.




