%{

******** Type System ********

}%

%% Primitive types
tp : type.

tp/nat : tp.
tp/bool : tp.

%% Lists of primitive types
tp-list : type.

tp-list/nil : tp-list.
tp-list/cons : tp -> tp-list -> tp-list.

%% Function types
fun-tp : type.
%% There is only way to introduce a function type.
fun-tp/ : tp-list -> tp -> fun-tp.

fun-tp-list : type.
fun-tp-list/nil : fun-tp-list.
fun-tp-list/cons : fun-tp -> fun-tp-list -> fun-tp-list.

%{

******** Syntax ********

}%

%{ Introduction of function bundles.

   Function names
   Function bundles

   TODO: DOCUMENT FOR GODS SAKE!
}%

fname : fun-tp -> type.
fbundle : fun-tp-list -> type.
fbundle+ : fun-tp-list -> type.

%{ This constant only exists to appease Twelfs splitter in the input coverage }%
fbundle0 : fbundle fun-tp-list/nil.

f-hd : fbundle+ (fun-tp-list/cons FT FTL) -> fname FT.
f-tl/z : fbundle FTL -> fbundle+ FTL.
f-tl/s : fbundle+ (fun-tp-list/cons FT FTL) -> fbundle+ FTL.



tm : tp -> type.
tm-list : tp-list -> type.

tm-list/nil : tm-list tp-list/nil.
tm-list/cons : tm T -> tm-list TL -> tm-list (tp-list/cons T TL).

%{ Syntactic term equality }%
tm-eq : tm T -> tm T -> type.

tm-eq/refl : tm-eq T T.



fun-def : fun-tp -> type.

fun-def/body : tm T -> (fun-def (fun-tp/ tp-list/nil T)).
fun-def/parm : (tm T0 -> fun-def (fun-tp/ TL T)) -> fun-def (fun-tp/ (tp-list/cons T0 TL) T).

fun-def-list : fun-tp-list -> type.

fun-def-list/nil : fun-def-list fun-tp-list/nil.
fun-def-list/cons : fun-def FT -> fun-def-list FTL -> fun-def-list (fun-tp-list/cons FT FTL).

fun-list : fun-tp-list -> type.

fun-list/nil : fun-list fun-tp-list/nil.
fun-list/cons : fun-def FT -> fun-list FTL -> fun-list (fun-tp-list/cons FT FTL).


%{ Primitive constants }%
tm/cst-n : nat -> tm tp/nat.
tm/cst-b : nat -> tm tp/bool.

%{ Operations on primitive constants }%
tm/plus  : tm tp/nat -> tm tp/nat -> tm tp/nat.

%{ Control flow }%
tm/if : tm tp/bool -> tm T -> tm T -> tm T.

tm/call : fname (fun-tp/ TL T) -> tm-list TL -> tm T.
tm/letrec : (fbundle FTL -> fun-def-list FTL)
               -> (fbundle FTL -> tm T) -> tm T.


